groups:
  - name: service_availability
    interval: 30s
    rules:
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
          category: availability
        annotations:
          summary: "Service {{ $labels.job }} is down"
          description: "{{ $labels.job }} has been down for more than 1 minute."

      - alert: ServiceDegraded
        expr: up == 0
        for: 30s
        labels:
          severity: warning
          category: availability
        annotations:
          summary: "Service {{ $labels.job }} may be degraded"
          description: "{{ $labels.job }} has been unreachable for 30 seconds."

  - name: request_rates
    interval: 30s
    rules:
      - alert: HighRequestRate
        expr: rate(http_requests_total[5m]) > 100
        for: 2m
        labels:
          severity: warning
          category: performance
        annotations:
          summary: "High request rate on {{ $labels.job }}"
          description: "{{ $labels.job }} is receiving {{ $value }} requests/sec (threshold: 100)"

      - alert: HighErrorRate
        expr: |
          (
            sum(rate(http_requests_total{status=~"5.."}[5m])) by (job)
            /
            sum(rate(http_requests_total[5m])) by (job)
          ) > 0.05
        for: 5m
        labels:
          severity: critical
          category: errors
        annotations:
          summary: "High error rate on {{ $labels.job }}"
          description: "{{ $labels.job }} error rate is {{ $value | humanizePercentage }} (threshold: 5%)"

  - name: business_metrics
    interval: 1m
    rules:
      - alert: HighOrderFailureRate
        expr: |
          (
            rate(orders_total{status="failed"}[10m])
            /
            rate(orders_total[10m])
          ) > 0.1
        for: 5m
        labels:
          severity: warning
          category: business
        annotations:
          summary: "High order failure rate"
          description: "Order failure rate is {{ $value | humanizePercentage }} over the last 10 minutes"

      - alert: HighPaymentFailureRate
        expr: |
          (
            rate(payments_total{status="failed"}[10m])
            /
            rate(payments_total[10m])
          ) > 0.15
        for: 5m
        labels:
          severity: critical
          category: business
        annotations:
          summary: "High payment failure rate"
          description: "Payment failure rate is {{ $value | humanizePercentage }} (threshold: 15%)"

      - alert: LowProductStock
        expr: product_stock_level < 10
        for: 5m
        labels:
          severity: warning
          category: inventory
        annotations:
          summary: "Low stock for product {{ $labels.product_name }}"
          description: "Product {{ $labels.product_name }} has only {{ $value }} items in stock"

  - name: performance
    interval: 30s
    rules:
      - alert: HighResponseTime
        expr: |
          histogram_quantile(0.95, 
            rate(http_request_duration_seconds_bucket[5m])
          ) > 2
        for: 5m
        labels:
          severity: warning
          category: performance
        annotations:
          summary: "High response time on {{ $labels.job }}"
          description: "95th percentile response time is {{ $value }}s (threshold: 2s)"

      - alert: HighMemoryUsage
        expr: |
          (
            process_resident_memory_bytes
            /
            1024 / 1024
          ) > 512
        for: 5m
        labels:
          severity: warning
          category: resources
        annotations:
          summary: "High memory usage on {{ $labels.job }}"
          description: "{{ $labels.job }} is using {{ $value }}MB of memory (threshold: 512MB)"

  - name: database
    interval: 1m
    rules:
      - alert: DatabaseConnectionIssue
        expr: pg_up == 0
        for: 1m
        labels:
          severity: critical
          category: database
        annotations:
          summary: "Database connection issue for {{ $labels.job }}"
          description: "Cannot connect to database for {{ $labels.job }}"